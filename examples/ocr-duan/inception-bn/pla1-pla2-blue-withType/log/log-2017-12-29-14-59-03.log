I1229 14:59:05.574623 12120 caffe.cpp:213] CUDNN version: 5105
I1229 14:59:05.575093 12120 caffe.cpp:229] Using GPUs 0
I1229 14:59:05.782428 12120 caffe.cpp:234] GPU 0: GeForce GTX 1050 Ti
I1229 14:59:07.838233 12120 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 300
base_lr: 1e-05
display: 200
max_iter: 3000
lr_policy: "step"
gamma: 0.5
momentum: 0.9
weight_decay: 0.0002
stepsize: 10000
snapshot: 1000
snapshot_prefix: "examples/ocr-duan/inception-bn/pla1-pla2-blue-withType/modules/inception-bn"
solver_mode: GPU
device_id: 0
debug_info: false
net: "examples/ocr-duan/inception-bn/pla1-pla2-blue-withType/train_val.prototxt"
train_state {
  level: 0
  stage: ""
}
test_initialization: false
I1229 14:59:07.838613 12120 solver.cpp:87] Creating training net from net file: examples/ocr-duan/inception-bn/pla1-pla2-blue-withType/train_val.prototxt
I1229 14:59:07.847113 12120 net.cpp:294] The NetState phase (0) differed from the phase (1) specified by a rule in layer data
I1229 14:59:07.847257 12120 net.cpp:294] The NetState phase (0) differed from the phase (1) specified by a rule in layer acc
I1229 14:59:07.847281 12120 net.cpp:294] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy_type
I1229 14:59:07.848697 12120 net.cpp:51] Initializing net from parameters: 
name: "inception_bn"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "data"
  type: "ImageData"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mean_value: 152
    mean_value: 152
    mean_value: 152
  }
  image_data_param {
    source: "/home/duan/data/plate/pla1-pla2-blue/train/trainWithType.txt"
    batch_size: 100
    new_height: 32
    new_width: 100
    root_folder: "/home/duan/data/plate/pla1-pla2-blue/train"
  }
}
layer {
  name: "Slice_label"
  type: "Slice"
  bottom: "label"
  top: "label1"
  top: "label2"
  slice_param {
    slice_point: 1
    axis: 1
  }
}
layer {
  name: "conv1_7x7_s2"
  type: "Convolution"
  bottom: "data"
  top: "conv1_7x7_s2"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 3
    kernel_size: 7
    stride: 2
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "conv1_7x7_s2_bn"
  type: "BatchNorm"
  bottom: "conv1_7x7_s2"
  top: "conv1_7x7_s2"
}
layer {
  name: "conv1_7x7_relu"
  type: "ReLU"
  bottom: "conv1_7x7_s2"
  top: "conv1_7x7_s2"
}
layer {
  name: "conv1_9x9_s2"
  type: "Convolution"
  bottom: "data"
  top: "conv1_9x9_s2"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 4
    kernel_size: 9
    stride: 2
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "conv1_9x9_s2_bn"
  type: "BatchNorm"
  bottom: "conv1_9x9_s2"
  top: "conv1_9x9_s2"
}
layer {
  name: "conv1_9x9_relu"
  type: "ReLU"
  bottom: "conv1_9x9_s2"
  top: "conv1_9x9_s2"
}
layer {
  name: "conv1_concat"
  type: "Concat"
  bottom: "conv1_7x7_s2"
  bottom: "conv1_9x9_s2"
  top: "conv1_concat"
}
layer {
  name: "pool1_3x3_s2"
  type: "Pooling"
  bottom: "conv1_concat"
  top: "pool1_3x3_s2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride_h: 2
    stride_w: 2
  }
}
layer {
  name: "conv2_3x3"
  type: "Convolution"
  bottom: "pool1_3x3_s2"
  top: "conv2_3x3"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "conv2_3x3_bn"
  type: "BatchNorm"
  bottom: "conv2_3x3"
  top: "conv2_3x3"
}
layer {
  name: "conv2_3x3_relu"
  type: "ReLU"
  bottom: "conv2_3x3"
  top: "conv2_3x3"
}
layer {
  name: "pool2_3x3_s2"
  type: "Pooling"
  bottom: "conv2_3x3"
  top: "pool2_3x3_s2"
  pooling_param {
    pool: MAX
    kernel_h: 2
    kernel_w: 2
    stride_h: 2
    stride_w: 2
  }
}
layer {
  name: "inception_3a_1x1"
  type: "Convolution"
  bottom: "pool2_3x3_s2"
  top: "inception_3a_1x1"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a_1x1_bn"
  type: "BatchNorm"
  bottom: "inception_3a_1x1"
  top: "inception_3a_1x1"
}
layer {
  name: "inception_3a_relu_1x1"
  type: "ReLU"
  bottom: "inception_3a_1x1"
  top: "inception_3a_1x1"
}
layer {
  name: "inception_3a_3x3_reduce"
  type: "Convolution"
  bottom: "pool2_3x3_s2"
  top: "inception_3a_3x3_reduce"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a_3x3_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_3a_3x3_reduce"
  top: "inception_3a_3x3_reduce"
}
layer {
  name: "inception_3a_relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_3a_3x3_reduce"
  top: "inception_3a_3x3_reduce"
}
layer {
  name: "inception_3a_3x3"
  type: "Convolution"
  bottom: "inception_3a_3x3_reduce"
  top: "inception_3a_3x3"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  convolution_param {
    num_output: 224
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a_3x3_bn"
  type: "BatchNorm"
  bottom: "inception_3a_3x3"
  top: "inception_3a_3x3"
}
layer {
  name: "inception_3a_relu_3x3"
  type: "ReLU"
  bottom: "inception_3a_3x3"
  top: "inception_3a_3x3"
}
layer {
  name: "inception_3a_pool"
  type: "Pooling"
  bottom: "pool2_3x3_s2"
  top: "inception_3a_pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_3a_pool_proj"
  type: "Convolution"
  bottom: "inception_3a_pool"
  top: "inception_3a_pool_proj"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a_pool_proj_bn"
  type: "BatchNorm"
  bottom: "inception_3a_pool_proj"
  top: "inception_3a_pool_proj"
}
layer {
  name: "inception_3a_relu_pool_proj"
  type: "ReLU"
  bottom: "inception_3a_pool_proj"
  top: "inception_3a_pool_proj"
}
layer {
  name: "inception_3a_output"
  type: "Concat"
  bottom: "inception_3a_1x1"
  bottom: "inception_3a_3x3"
  bottom: "inception_3a_pool_proj"
  top: "inception_3a_output"
}
layer {
  name: "inception_3b_1x1"
  type: "Convolution"
  bottom: "inception_3a_output"
  top: "inception_3b_1x1"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b_1x1_bn"
  type: "BatchNorm"
  bottom: "inception_3b_1x1"
  top: "inception_3b_1x1"
}
layer {
  name: "inception_3b_relu_1x1"
  type: "ReLU"
  bottom: "inception_3b_1x1"
  top: "inception_3b_1x1"
}
layer {
  name: "inception_3b_3x3_reduce"
  type: "Convolution"
  bottom: "inception_3a_output"
  top: "inception_3b_3x3_reduce"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b_3x3_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_3b_3x3_reduce"
  top: "inception_3b_3x3_reduce"
}
layer {
  name: "inception_3b_relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_3b_3x3_reduce"
  top: "inception_3b_3x3_reduce"
}
layer {
  name: "inception_3b_3x3"
  type: "Convolution"
  bottom: "inception_3b_3x3_reduce"
  top: "inception_3b_3x3"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  convolution_param {
    num_output: 160
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b_3x3_bn"
  type: "BatchNorm"
  bottom: "inception_3b_3x3"
  top: "inception_3b_3x3"
}
layer {
  name: "inception_3b_relu_3x3"
  type: "ReLU"
  bottom: "inception_3b_3x3"
  top: "inception_3b_3x3"
}
layer {
  name: "inception_3b_pool"
  type: "Pooling"
  bottom: "inception_3a_output"
  top: "inception_3b_pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_3b_pool_proj"
  type: "Convolution"
  bottom: "inception_3b_pool"
  top: "inception_3b_pool_proj"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b_pool_proj_bn"
  type: "BatchNorm"
  bottom: "inception_3b_pool_proj"
  top: "inception_3b_pool_proj"
}
layer {
  name: "inception_3b_relu_pool_proj"
  type: "ReLU"
  bottom: "inception_3b_pool_proj"
  top: "inception_3b_pool_proj"
}
layer {
  name: "inception_3b_output"
  type: "Concat"
  bottom: "inception_3b_1x1"
  bottom: "inception_3b_3x3"
  bottom: "inception_3b_pool_proj"
  top: "inception_3b_output"
}
layer {
  name: "inception_3b_output_proj"
  type: "Convolution"
  bottom: "inception_3b_output"
  top: "inception_3b_output_proj"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b_output_sum"
  type: "Eltwise"
  bottom: "inception_3b_output_proj"
  bottom: "inception_3a_output"
  top: "inception_3b_output_sum"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "inception_3c_1x1"
  type: "Convolution"
  bottom: "inception_3b_output_sum"
  top: "inception_3c_1x1"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3c_1x1_bn"
  type: "BatchNorm"
  bottom: "inception_3c_1x1"
  top: "inception_3c_1x1"
}
layer {
  name: "inception_3c_relu_1x1"
  type: "ReLU"
  bottom: "inception_3c_1x1"
  top: "inception_3c_1x1"
}
layer {
  name: "inception_3c_3x3_reduce"
  type: "Convolution"
  bottom: "inception_3b_output_sum"
  top: "inception_3c_3x3_reduce"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3c_3x3_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_3c_3x3_reduce"
  top: "inception_3c_3x3_reduce"
}
layer {
  name: "inception_3c_relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_3c_3x3_reduce"
  top: "inception_3c_3x3_reduce"
}
layer {
  name: "inception_3c_3x3"
  type: "Convolution"
  bottom: "inception_3c_3x3_reduce"
  top: "inception_3c_3x3"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  convolution_param {
    num_output: 160
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3c_3x3_bn"
  type: "BatchNorm"
  bottom: "inception_3c_3x3"
  top: "inception_3c_3x3"
}
layer {
  name: "inception_3c_relu_3x3"
  type: "ReLU"
  bottom: "inception_3c_3x3"
  top: "inception_3c_3x3"
}
layer {
  name: "inception_3c_pool"
  type: "Pooling"
  bottom: "inception_3b_output_sum"
  top: "inception_3c_pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_3c_pool_proj"
  type: "Convolution"
  bottom: "inception_3c_pool"
  top: "inception_3c_pool_proj"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3c_pool_proj_bn"
  type: "BatchNorm"
  bottom: "inception_3c_pool_proj"
  top: "inception_3c_pool_proj"
}
layer {
  name: "inception_3c_relu_pool_proj"
  type: "ReLU"
  bottom: "inception_3c_pool_proj"
  top: "inception_3c_pool_proj"
}
layer {
  name: "inception_3c_output"
  type: "Concat"
  bottom: "inception_3c_1x1"
  bottom: "inception_3c_3x3"
  bottom: "inception_3c_pool_proj"
  top: "inception_3c_output"
}
layer {
  name: "inception_3c_output_proj"
  type: "Convolution"
  bottom: "inception_3c_output"
  top: "inception_3c_output_proj"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
      std: 1
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3c_output_sum"
  type: "Eltwise"
  bottom: "inception_3c_output_proj"
  bottom: "inception_3b_output_sum"
  top: "inception_3c_output_sum"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "pool5_ave"
  type: "Pooling"
  bottom: "inception_3c_output_sum"
  top: "pool5_ave"
  pooling_param {
    pool: AVE
    kernel_h: 4
    kernel_w: 1
    stride_h: 1
    stride_w: 1
  }
}
layer {
  name: "pool5_ave_transpose"
  type: "Transpose"
  bottom: "pool5_ave"
  top: "pool5_ave_transpose"
  transpose_param {
    dim: 3
    dim: 2
    dim: 0
    dim: 1
  }
}
layer {
  name: "blstm_input"
  type: "Reshape"
  bottom: "pool5_ave_transpose"
  top: "blstm_input"
  reshape_param {
    shape {
      dim: -1
    }
    axis: 1
    num_axes: 2
  }
}
layer {
  name: "lstm1"
  type: "Lstm"
  bottom: "blstm_input"
  top: "lstm1"
  lstm_param {
    num_output: 256
    weight_filler {
      type: "gaussian"
      std: 0.1
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "lstm1-reverse1"
  type: "Reverse"
  bottom: "blstm_input"
  top: "rlstm1_input"
  reverse_param {
    axis: 0
  }
}
layer {
  name: "rlstm1"
  type: "Lstm"
  bottom: "rlstm1_input"
  top: "rlstm1-output"
  lstm_param {
    num_output: 256
    weight_filler {
      type: "gaussian"
      std: 0.1
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "lstm1-reverse2"
  type: "Reverse"
  bottom: "rlstm1-output"
  top: "rlstm1"
  reverse_param {
    axis: 0
  }
}
layer {
  name: "blstm1"
  type: "Concat"
  bottom: "lstm1"
  bottom: "rlstm1"
  top: "blstm1"
  concat_param {
    axis: 2
  }
}
layer {
  name: "lstm2"
  type: "Lstm"
  bottom: "blstm1"
  top: "lstm2"
  lstm_param {
    num_output: 256
    weight_filler {
      type: "gaussian"
      std: 0.1
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "lstm2-reverse1"
  type: "Reverse"
  bottom: "blstm1"
  top: "rlstm2_input"
  reverse_param {
    axis: 0
  }
}
layer {
  name: "rlstm2"
  type: "Lstm"
  bottom: "rlstm2_input"
  top: "rlstm2-output"
  lstm_param {
    num_output: 256
    weight_filler {
      type: "gaussian"
      std: 0.1
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "lstm2-reverse2"
  type: "Reverse"
  bottom: "rlstm2-output"
  top: "rlstm2"
  reverse_param {
    axis: 0
  }
}
layer {
  name: "blstm2"
  type: "Concat"
  bottom: "lstm2"
  bottom: "rlstm2"
  top: "blstm2"
  concat_param {
    axis: 2
  }
}
layer {
  name: "blstm_sum"
  type: "Eltwise"
  bottom: "blstm1"
  bottom: "blstm2"
  top: "blstm_sum"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "fc1x5990"
  type: "InnerProduct"
  bottom: "blstm_sum"
  top: "fc1x5990"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 37
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 2
  }
}
layer {
  name: "ctcloss"
  type: "WarpCTCLoss"
  bottom: "fc1x5990"
  bottom: "label2"
  top: "ctcloss"
  loss_weight: 1
}
layer {
  name: "fc_type"
  type: "InnerProduct"
  bottom: "pool5_ave"
  top: "fc_type"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss_type"
  type: "SoftmaxWithLoss"
  bottom: "fc_type"
  bottom: "label1"
  top: "loss_type"
}
I1229 14:59:07.849751 12120 layer_factory.hpp:77] Creating layer data
I1229 14:59:07.849867 12120 net.cpp:84] Creating Layer data
I1229 14:59:07.849889 12120 net.cpp:380] data -> data
I1229 14:59:07.849961 12120 net.cpp:380] data -> label
I1229 14:59:07.850011 12120 image_data_layer.cpp:76] Opening file /home/duan/data/plate/pla1-pla2-blue/train/trainWithType.txt
F1229 14:59:07.850090 12120 image_data_layer.cpp:94] Check failed: !lines_.empty() File is empty
*** Check failure stack trace: ***
    @     0x7eff1f1e05cd  google::LogMessage::Fail()
    @     0x7eff1f1e2433  google::LogMessage::SendToLog()
    @     0x7eff1f1e015b  google::LogMessage::Flush()
    @     0x7eff1f1e2e1e  google::LogMessageFatal::~LogMessageFatal()
    @     0x7eff2627e7ae  caffe::ImageDataLayer<>::DataLayerSetUp()
    @     0x7eff262bb30e  caffe::BasePrefetchingDataLayer<>::LayerSetUp()
    @     0x7eff263b6c62  caffe::Net<>::Init()
    @     0x7eff263b918e  caffe::Net<>::Net()
    @     0x7eff263a1b82  caffe::Solver<>::InitTrainNet()
    @     0x7eff263a20f5  caffe::Solver<>::Init()
    @     0x7eff263a23df  caffe::Solver<>::Solver()
    @     0x7eff2640a161  caffe::Creator_SGDSolver<>()
    @           0x40ad8f  train()
    @           0x4077e6  main
    @     0x7eff10ad8830  __libc_start_main
    @           0x408009  _start
    @              (nil)  (unknown)
